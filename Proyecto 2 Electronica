#include <stdint.h>
#include <string.h>
#include  <Wire.h>
#include  <LiquidCrystal_I2C.h> //Definí la librería de la pantalla LCD
#include <Servo.h>;
#include <EasyBuzzer.h>

LiquidCrystal_I2C lcd(0x27, 16,2);
Servo motorSalud;

typedef enum Estados {S0, S1, S2, S3, S4, S5, S6, S7, S8, S9};
Estados EstadoActual = S0;
Estados EstadoFuturo = S0;

//Definir los componentes que usaré como entradas.  
const uint8_t Switch1 = 8; 
const uint8_t Switch2 = 9;
const uint8_t Switch3 = 5;
const uint8_t sensorTemp = A3;
//Definir los componentes que usaré como entradas.  
const uint8_t ledVerde = 2;
const uint8_t ledRoja = 3; 
const uint8_t frecuenciaCardiaca = A1;
const uint8_t motorSalud_pin = 7;

// Definir el tiempo con el que quiero que cada caso suceda
const long interval =5000; //intervalo entre casos
unsigned long previousMillis = 0;

//Establecí cada pin de entrada y salida de los componentes del circuito 

void setup() {
  

  lcd.init();
  lcd.backlight();
    lcd.print("Bienvenido");
    delay(2000);

  pinMode(Switch1, INPUT_PULLUP);
  pinMode(Switch2, INPUT_PULLUP);
  pinMode(Switch3, INPUT);
  pinMode(sensorTemp, INPUT);
  pinMode(frecuenciaCardiaca, INPUT);
   motorSalud.attach(7);
   motorSalud.write(-90);
  pinMode(ledVerde, OUTPUT);
  pinMode(ledRoja, OUTPUT);
 
  Serial.begin(9600);
  EasyBuzzer.setPin(6);
    
  
}

// Ejecución completa del códico con todos los casos 
void loop() {
  // Lectura de cada uno de mis switches, es una variable booleana porque da un verdadero o un falso.  
  boolean switch1State = digitalRead(Switch1);
  boolean switch2State = digitalRead(Switch2);
  boolean switch3State = digitalRead(Switch3);
  int pulso = analogRead(frecuenciaCardiaca);
  int temperatura = analogRead(sensorTemp);

  // Mapeo de los dos potenciómetros para que puedan tener las conversiones necesarias de los valores de pulso y temperatura
  int pulsoMapeo = map(pulso, 0, 1023, 0, 220);
  int temperaturaMapeo = map(temperatura, 0, 1023, 0, 42);

  Serial.print(pulsoMapeo); Serial.print(" , ");
  Serial.print(temperaturaMapeo); Serial.print(" , ");
 

  // Establecer los 9 casos y que hará cada uno dependiendo el switch y el control de los potenciometros
  switch(EstadoActual){
    case S0:
      if (switch1State == HIGH)
        EstadoFuturo = S8; 
      else 
        EstadoFuturo = S1;
      break;

    case S1:
      if (switch2State == LOW)
        EstadoFuturo = S2;
    
      break;

    case S2:
      if (switch3State == HIGH)
        EstadoFuturo = S3;
      else
        EstadoFuturo = S4;
      break;

    case S3:
      if (temperaturaMapeo > 20 && temperaturaMapeo < 40)
        EstadoFuturo = S5;
      else 
        EstadoFuturo = S6;
      break;
      
    case S4:
      if (temperaturaMapeo > 20 && temperaturaMapeo < 40)
        EstadoFuturo = S5;
      else 
        EstadoFuturo = S6;
      break;

    case S5:
      EstadoFuturo = S7;
      break;

    case S6:
      if (pulsoMapeo > 60 && pulsoMapeo < 100)
        EstadoFuturo = S8;
      else 
        EstadoFuturo = S7;
      break;

    case S7:
      EstadoFuturo = S9;
      break;

    case S8:
      EstadoFuturo = S0;
      break;

    case S9:
      EstadoFuturo = S0;
      break;
  }

  //Salidas de mis estados
  switch(EstadoActual){
    case S0:
      lcd.setCursor(0,0);
      lcd.print("Como te sientes?");
      delay(4000);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Bien: Enciende");
      lcd.setCursor(0,1);
      lcd.print("Switch 1");
      delay(5000);
      lcd.clear();
      break;
      
    case S1:
      lcd.setCursor(0,0);
      lcd.print("Te sientes mal?");
      delay(4000);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Enciende");
      lcd.setCursor(0,1);
      lcd.print("Switch 2");
      delay(5000);
      lcd.clear();
      break;

    case S2:
      lcd.setCursor(0,0);
      lcd.print("Kid: On");
      lcd.setCursor(0,1);
      lcd.print("Adult: Off");
      delay(5000);
      lcd.clear();
      break;

    case S3:
      lcd.setCursor(0,0);
      lcd.print("Infanto");
      lcd.setCursor(0,1);
      lcd.print("Inicia chequeo..");
      delay(4000);
      lcd.clear();
      break;

    case S4:
      lcd.setCursor(0,0);
      lcd.print("Adulto");
      lcd.setCursor(0,1);
      lcd.print("Inicia chequeo..");
      delay(4000);
      lcd.clear();
      break;

    case S5:
      lcd.setCursor(0,0);
      digitalWrite(ledVerde, HIGH);
      lcd.print("Temp: normal   ");
      delay(2000);
      lcd.clear();
      break;

    case S6:
      lcd.setCursor(0,0);
      lcd.print("Temp: alta   ");
      digitalWrite(ledRoja, HIGH);
      delay(2000);
      lcd.clear();
      break;

    case S7: 
      lcd.setCursor(0,0);
      lcd.print("Pulso: alto   ");
      EasyBuzzer.beep(2000);
      delay(1500);
      EasyBuzzer.stopBeep();
      break;

    case S8:
      lcd.setCursor(0,0);
      lcd.print("No necesitas   ");
      lcd.setCursor(0,1);
      lcd.print("diagnostico   ");
      delay(5000);
      break;

    case S9:
    lcd.setCursor(0,0);
      delay(2000);
      lcd.setCursor(0,0);
      lcd.print("Diagnostico:");
      lcd.setCursor(0,1);
      lcd.print("Enfermo");
      delay(5000);
      break;
  }

  // Actualización de estado
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    EstadoActual = EstadoFuturo;
    previousMillis = currentMillis;
  }
}


